name: Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

# 동시에 여러 번 돌면 가장 마지막 것만 유지
concurrency:
  group: cloud-run-deploy-main
  cancel-in-progress: true

env:
  PROJECT_ID: quali-journal-prod
  REGION: asia-northeast3
  SERVICE_NAME: quali-journal-admin
  ENTRYPOINT: uvicorn server_quali:app --host 0.0.0.0 --port 8080

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # -------- PR 이벤트: 실제 배포는 건너뛰고 성공 처리(프리뷰는 pr-preview.yml이 담당) --------
      - name: No-op on pull_request (preview handled separately)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "Pull Request event -> skip real deploy."
          echo "Preview is deployed by .github/workflows/pr-preview.yml"
      # ---------------------------------------------------------------------------

      # -------- main / 수동 실행: WIF로 인증 후 실제 배포 --------
      - name: Auth (WIF - main/dispatch)
        if: ${{ github.event_name != 'pull_request' }}
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_WIF_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          token_format: "access_token"

      - name: Setup gcloud
        if: ${{ github.event_name != 'pull_request' }}
        uses: google-github-actions/setup-gcloud@v2

      - name: Enable required APIs (idempotent)
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          gcloud services enable run.googleapis.com cloudbuild.googleapis.com \
            artifactregistry.googleapis.com secretmanager.googleapis.com --quiet

      - name: Deploy to Cloud Run (main only)
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          gcloud run deploy "$SERVICE_NAME" \
            --project "$PROJECT_ID" \
            --region  "$REGION" \
            --source  . \
            --allow-unauthenticated \
            --port 8080 \
            --set-build-env-vars "GOOGLE_ENTRYPOINT=${{ env.ENTRYPOINT }}" \
            --set-secrets "ADMIN_TOKEN=ADMIN_TOKEN:latest" \
            --quiet

      - name: Get Service URL
        if: ${{ github.event_name != 'pull_request' }}
        id: url
        run: |
          URL=$(gcloud run services describe "$SERVICE_NAME" \
            --project "$PROJECT_ID" --region "$REGION" \
            --format='value(status.url)')
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          echo "Service URL: $URL"

      # 스모크: /health → 실패 시 /api/status (ADMIN_TOKEN 필요). 권한 없으면 건너뜀.
      - name: Smoke check
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
        env:
          URL: ${{ steps.url.outputs.url }}
        run: |
          set -e
          if curl -fsS "$URL/health" > /dev/null; then
            echo "✓ /health 200 OK"
            exit 0
          fi
          echo "Trying /api/status with ADMIN_TOKEN..."
          TOKEN=$(gcloud secrets versions access latest --secret=ADMIN_TOKEN 2>/dev/null || true)
          if [ -n "$TOKEN" ]; then
            curl -fsS -H "X-Admin-Token: $TOKEN" "$URL/api/status" > /dev/null && echo "✓ /api/status 200 OK" && exit 0
          fi
          echo "⚠ Smoke check skipped or failed (no Secret accessor or endpoint blocked)."

      # (선택) 성공 메시지 — 실패해도 배포엔 영향 없도록
      - name: Echo done
        if: ${{ github.event_name != 'pull_request' }}
        run: echo "✅ Deploy finished for $SERVICE_NAME in $REGION"

